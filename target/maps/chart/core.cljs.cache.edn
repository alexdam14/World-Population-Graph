;; Analyzed by ClojureScript 1.8.34
{:use-macros nil, :excludes #{}, :name chart.core, :imports nil, :requires {chart.data chart.data, cljsjs.jquery cljsjs.jquery, cljsjs.c3 cljsjs.c3}, :uses {pop-data-per-country chart.data, data chart.data, countries chart.data, years chart.data}, :defs {generate-chart {:protocol-inline nil, :meta {:file "C:\\Users\\Alex\\Desktop\\World Population Graph\\src\\chart\\core.cljs", :line 7, :column 7, :end-line 7, :end-column 21, :arglists (quote ([]))}, :name chart.core/generate-chart, :variadic false, :file "src\\chart\\core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, main {:protocol-inline nil, :meta {:file "C:\\Users\\Alex\\Desktop\\World Population Graph\\src\\chart\\core.cljs", :line 36, :column 16, :end-line 36, :end-column 20, :export true, :arglists (quote ([&args]))}, :name chart.core/main, :variadic false, :file "src\\chart\\core.cljs", :end-column 20, :method-params ([&args]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([&args]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:zoom :bottom :columns :rescale :width :xs :size :padding :enabled :height :data}, :order [:data :size :padding :zoom :xs :columns :height :width :bottom :enabled :rescale]}, :doc nil}